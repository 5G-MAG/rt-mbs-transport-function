#!/bin/sh
#
# 5G-MAG Reference Tools: Generate OpenAPI bindings tool
# ======================================================
#
# Author(s): David Waring <david.warin2@bbc.co.uk>
#            Dev Audsin <dev.audsin@bbc.co.uk>
# Copyright: ©2022-2025 British Broadcasting Corporation
#   License: 5G-MAG Public License v1.0
#
# Prerequisites:
#   - git
#   - java
#   - wget
#
# Licensed under the License terms and conditions for use, reproduction, and
# distribution of 5G-MAG software (the “License”).  You may not use this file
# except in compliance with the License.  You may obtain a copy of the License at
# https://www.5g-mag.com/reference-tools.  Unless required by applicable law or
# agreed to in writing, software distributed under the License is distributed on
# an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied.
#
# See the License for the specific language governing permissions and limitations
# under the License.
#################################################################################
#
# This script will use wget and git to download the openapi-generator-cli tool
# and a specified branch of the 5G APIs. It will then create a set of bindings
# in a specified output language.
#

# Save location of this script and the name it was called by
scriptname=`basename "$0"`
scriptdir=`dirname "$0"`
scriptdir=`cd "$scriptdir"; pwd`

# Command line option defaults
default_branch='REL-18'
default_apis="TS29581_Nmbstf_DistSession"
default_cache_dir="${MESON_BUILD_ROOT:+$MESON_BUILD_ROOT/$MESON_SUBDIR/openapi-generator-cache}"

# Parse command line arguments
ARGS=`getopt -n "$scriptname" -o 'a:b:C:DhM:' -l 'api:,branch:,cache-dir:,debug,help,model-deps:' -s sh -- "$@"`

if [ $? -ne 0 ]; then
    print_syntax >&2
    exit 1
fi

print_syntax() {
    echo "Syntax: $scriptname [-hD] [-b <release-branch>] [-a <API-name>] [-M <model-deps-file>] [-C <cache-dir>]"
}

print_help() {
    cat <<EOF
5G-MAG Reference Tools - Generate OpenAPI bindings

This script will download the 5G APIs and openapi-generator-cli tool and uses
them to create bindings of the specified language.

EOF
    print_syntax
    cat <<EOF

Options:
  -h         --help                Show this help message and exit.
  -a API     --api API             The OpenAPI interface to generate the
                                   bindings from (e.g.
                                   TS26532_Ndcaf_DataReportingProvisioning).
			           [default: $default_apis]
  -b BRANCH  --branch BRANCH       Use the given branch of the 5G_APIs
                                   repository. [default: $default_branch]
  -C DIR     --cache-dir DIR       Use the directory to cache working files.
                                   [default: ${default_cache_dir:-use temporary dir}]
  -D         --debug               Add debug output.
  -M DEPFILE --model-deps DEPFILE  File to store the list of generated model
                                   source files.
EOF
}

eval set -- "$ARGS"
unset ARGS

APIS="$default_apis"
BRANCH="$default_branch"
DEBUG_FLAG=""
MODEL_DEPS=""
CACHE_DIR="$default_cache_dir"

while true; do
    case "$1" in
    -a|--api)
	APIS="$2"
	shift 2
	continue
	;;
    -b|--branch)
	BRANCH="$2"
	shift 2
	continue
	;;
    -C|--cache-dir)
        CACHE_DIR="$2"
        shift 2
        continue
        ;;
    -D|--debug)
	DEBUG_FLAG="-D"
	shift
	continue
	;;
    -h|--help)
	print_help
	exit 0
	;;
    -M|--model-deps)
	MODEL_DEPS="$2"
	shift 2
	continue
	;;
    --)
	shift
	break
	;;
    *)
	echo "Error: Command line argument \"$1\" unexpected" >&2
	print_syntax >&2
	exit 1
	;;
    esac
done

if [ $# -gt 0 ]; then
    echo "Error: Command line argument \"$1\" unexpected" >&2
    print_syntax >&2
    exit 1
fi

# Get the absolute path to the destination directory
destdir=`realpath -m "$scriptdir/openapi"`
if [ -n "$MESON_SOURCE_ROOT" ]; then
  # Use source root directory if available
  open5gs_dir=`realpath "$MESON_SOURCE_ROOT/subprojects/open5gs"`
  rt_common_shared_dir=`realpath "$MESON_SOURCE_ROOT/subprojects/rt-common-shared"`
else
  # try relative to the script directory
  open5gs_dir=`realpath "$scriptdir/../../subprojects/open5gs"`
  rt_common_shared_dir=`realpath "$scriptdir/../../subprojects/rt-common-shared"`
fi
openapi_gen_dir="$open5gs_dir/lib/sbi/support/r17-20230301-openapitools-6.4.0/openapi-generator"

if [ -n "$CACHE_DIR" ]; then
    templates_dir="$CACHE_DIR/templates"
else
    templates_dir=`mktemp -d 'templates-XXXXXXXX'`
    trap 0 'rm -rf "$templates_dir"'
fi
mkdir -p "$templates_dir"

cp -v "${rt_common_shared_dir}/open5gs-tools/openapi-generator-templates/cpp-restbed-server/"* "${templates_dir}/"
cp -v "${scriptdir}/openapi-generator-templates/"* "${templates_dir}/"
sed -i "s@^templateDir:.*@templateDir: .@;/^files:/ a \\
  api.mustache: \\
    templateType: API \\
    destinationFilename: .model \\
  api-info-head.mustache: \\
    templateType: API \\
    destinationFilename: -info.h
" "$templates_dir/config.yaml"
if [ -n "$DEBUG" ]; then
    cat "$templates_dir/config.yaml"
fi

# call the common generate_openapi script
if [ ! -d "$scriptdir/openapi" ]; then
    mkdir "$scriptdir/openapi"
fi

if [ -x "$scriptdir/post-process.sh" ]; then
    CPP_POST_PROCESS_FILE="$scriptdir/post-process.sh" export CPP_POST_PROCESS_FILE
fi

if ! "$rt_common_shared_dir/open5gs-tools/scripts/generate_openapi" -a "${APIS}" -o "$rt_common_shared_dir/mbstf/5G_APIs-overrides" -b "${BRANCH}" -c "$templates_dir/config.yaml" -l cpp-restbed-server -d "$scriptdir/openapi" -g 6.4.0 -P "reftools.mbstf" $DEBUG_FLAG ${CACHE_DIR:+-C "$CACHE_DIR"}; then
    echo "Error: Failed to generate OpenAPI model" 1>&2
    exit 1
fi

if [ -x "$scriptdir/post-process.sh" ]; then
    (
        cd "$scriptdir"
        for i in openapi/model/*.cc; do
            "$scriptdir/post-process.sh" "$i"
        done
    )
fi

if [ -n "$MODEL_DEPS" ]; then
    (cd "$scriptdir"; echo openapi/model/*.cc openapi/model/*.h openapi/model/*.hh > "$MODEL_DEPS")
fi

exit 0
